// df     ->  display - flex (row)
// dfc    ->  display - flex (column)
// flex1  ->  flex - 1
// gap1   ->  gap - 1rem
// no-gap ->  gap - 0
// grid-2 -> grid wih 2 columns

// align-start  ->  align-items - flex-start
// jcc    ->  justify-content - center

// pr     ->  position - relative
// cp     ->  cursor - pointer
// center ->  text-align - center
// caps   ->  text-transform - uppercase

// p-8, p-16, p-8-16, mt-8, mt-16, mb-8, mb-16, mrl-auto
// rotateZ(degree) -> 30, 45, 90, 180, 270

// .ellipsis1, .ellipsis2

.df,
.dfc {
  display: flex;
  gap: var(--gap, .5rem);
}

.df {
  align-items: center;
}

.dfc {
  flex-direction: column;
}

.flex1 {
  flex: 1;
}

.gap1 {
  gap: 1rem;
}

.no-gap {
  gap: 0;
}

.jcc {
  justify-content: center;
}

.align-start {
  align-items: flex-start;
}

.grid-2 {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: var(--g2-gap, .5rem);
}

.pr {
  position: relative;
}

.cp {
  cursor: pointer;
}

.center {
  text-align: center;
}

.caps {
  text-transform: uppercase;
}

.p-8 {
  padding: 8px;
}

.p-16 {
  padding: 16px;
}

.p-8-16 {
  padding: 8px 16px;
}

.mt-8 {
  margin-top: 8px;
}

.mt-16 {
  margin-top: 16px;
}

.mb-8 {
  margin-bottom: 8px;
}

.mb-16 {
  margin-bottom: 16px;
}

.mrl-auto {
  margin-right: auto;
  margin-left: auto;
}

svg {
  cursor: pointer;
}

.rotateZ30 {
  transform: rotateZ(30deg);
}

.rotateZ45 {
  transform: rotateZ(45deg);
}

.rotateZ90 {
  transform: rotateZ(90deg);
}

.rotateZ180 {
  transform: rotateZ(180deg);
}

.rotateZ270 {
  transform: rotateZ(270deg);
}

.fs-14 {
  font-size: 14px;
}

.ellipsis1,
.ellipsis2 {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

.ellipsis2 {
  @supports(-webkit-line-clamp: 2) {
    white-space: initial;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
  }
}